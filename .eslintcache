[{"/Users/hiroaki/workspace/chatbot-portfolio/src/index.tsx":"1","/Users/hiroaki/workspace/chatbot-portfolio/src/reportWebVitals.ts":"2","/Users/hiroaki/workspace/chatbot-portfolio/src/App.tsx":"3","/Users/hiroaki/workspace/chatbot-portfolio/src/components/Header.tsx":"4","/Users/hiroaki/workspace/chatbot-portfolio/src/components/index.ts":"5","/Users/hiroaki/workspace/chatbot-portfolio/src/components/AnswersList.tsx":"6","/Users/hiroaki/workspace/chatbot-portfolio/src/components/Answer.tsx":"7","/Users/hiroaki/workspace/chatbot-portfolio/src/components/Chats.tsx":"8","/Users/hiroaki/workspace/chatbot-portfolio/src/components/Chat.tsx":"9","/Users/hiroaki/workspace/chatbot-portfolio/src/dataset.ts":"10","/Users/hiroaki/workspace/chatbot-portfolio/src/components/About.tsx":"11","/Users/hiroaki/workspace/chatbot-portfolio/src/components/Home.tsx":"12"},{"size":514,"mtime":1607967775302,"results":"13","hashOfConfig":"14"},{"size":425,"mtime":1607965250746,"results":"15","hashOfConfig":"14"},{"size":899,"mtime":1608263139304,"results":"16","hashOfConfig":"14"},{"size":2500,"mtime":1608266860532,"results":"17","hashOfConfig":"14"},{"size":228,"mtime":1608019056910,"results":"18","hashOfConfig":"14"},{"size":494,"mtime":1608182585674,"results":"19","hashOfConfig":"14"},{"size":349,"mtime":1608140143982,"results":"20","hashOfConfig":"14"},{"size":377,"mtime":1608115099477,"results":"21","hashOfConfig":"14"},{"size":508,"mtime":1608053078092,"results":"22","hashOfConfig":"14"},{"size":3757,"mtime":1608180746445,"results":"23","hashOfConfig":"14"},{"size":116,"mtime":1608129506346,"results":"24","hashOfConfig":"14"},{"size":2350,"mtime":1608263154440,"results":"25","hashOfConfig":"14"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},"zihj8j",{"filePath":"29","messages":"30","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"31","messages":"32","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"33","usedDeprecatedRules":"28"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"52","usedDeprecatedRules":"28"},"/Users/hiroaki/workspace/chatbot-portfolio/src/index.tsx",[],["53","54"],"/Users/hiroaki/workspace/chatbot-portfolio/src/reportWebVitals.ts",[],"/Users/hiroaki/workspace/chatbot-portfolio/src/App.tsx",["55","56","57","58"],"import React, { useState, useEffect } from \"react\";\nimport { BrowserRouter, Route, Switch, Redirect } from 'react-router-dom';\nimport defaultDataset from './dataset';\nimport './assets/styles/style.css'\nimport Chatbot from './components/Home'\nimport Header from './components/Header'\nimport About from './components/About'\nimport ProfileIcon from './assets/img/portfolio_icon.png'\n\nconst App: React.FC = () => {\n  return (\n    <div className='pc-container'>\n      <BrowserRouter>\n        <Header />\n        <Switch>\n          <Route exact={true} path=\"/\" component={Chatbot} />\n          <Route path=\"/about\" component={About} />\n          {/* <Route path=\"/about\" component={} />\n          <Route path=\"/contact\" component={} /> */}\n          {/* Not Found */}\n          <Route component={() => <Redirect to=\"/\" />} />\n        </Switch>\n      </BrowserRouter>\n    </div>\n  );\n}\n\nexport default App;\n","/Users/hiroaki/workspace/chatbot-portfolio/src/components/Header.tsx",["59","60","61","62","63","64","65","66","67"],"/Users/hiroaki/workspace/chatbot-portfolio/src/components/index.ts",[],"/Users/hiroaki/workspace/chatbot-portfolio/src/components/AnswersList.tsx",[],"/Users/hiroaki/workspace/chatbot-portfolio/src/components/Answer.tsx",[],"/Users/hiroaki/workspace/chatbot-portfolio/src/components/Chats.tsx",[],"/Users/hiroaki/workspace/chatbot-portfolio/src/components/Chat.tsx",[],"/Users/hiroaki/workspace/chatbot-portfolio/src/dataset.ts",[],"/Users/hiroaki/workspace/chatbot-portfolio/src/components/About.tsx",[],"/Users/hiroaki/workspace/chatbot-portfolio/src/components/Home.tsx",["68","69"],"import React, { useState, useEffect } from \"react\";\nimport defaultDataset from '../dataset';\nimport '../assets/styles/style.css'\nimport { AnswersList, Chats } from './index';\nimport ProfileIcon from '../assets/img/portfolio_icon.png'\n\nconst Home: React.FC = () => {\n  const [answers, setAnswers] = useState<string[]>([]);\n  const [chats, setChats] = useState([]);\n  const [currentId, setCurrentId] = useState('init');\n  const [dataset] = useState<any>(defaultDataset);\n\n  const displayNextQuestionId = (nextQuestionId: string) => {\n    const currentChats: any = chats;\n    currentChats.push({\n      text: dataset[nextQuestionId].question,\n      type: 'question'\n    })\n\n    setAnswers(dataset[nextQuestionId].answers)\n    setChats(currentChats)\n    setCurrentId(nextQuestionId)\n  }\n\n  const selectAnswer = (selectedAnswer: string, nextQuestionId: string) => {\n    switch(true) {\n      case (nextQuestionId === 'init'):\n        displayNextQuestionId(nextQuestionId);\n        break;\n      case (/^https:*/.test(nextQuestionId)):\n        const a = document.createElement('a');\n        a.href = nextQuestionId;\n        a.target = '_blank';\n        a.click();\n        break;\n      default:\n        const currentChats: any = chats;\n        currentChats.push({\n          text: selectedAnswer,\n          type: 'answer'\n        })\n\n        const newChats = Object.assign([], currentChats); \n        setChats(newChats)\n\n        // 相手が回答してから１秒後に次の質問が表示されるように\n        setTimeout(() => displayNextQuestionId(nextQuestionId), 1000)\n        break;\n    }\n  }\n\n  useEffect(() => {\n    const initAnswer = '';\n    selectAnswer(initAnswer, currentId)  \n  }, [])\n\n  useEffect(() => {\n    const scrollArea = document.getElementById('scroll-area');\n\n    if (scrollArea) {\n      scrollArea.scrollTop = scrollArea.scrollHeight;\n    }\n  })\n\n  return (\n    <section className='c-section' id='scroll-area'>\n      <div className='c-box'>\n      <div className='first-view-wrap'>\n        <img src={ProfileIcon} className='profile-icon' />\n        <div className='first-view-name'>HIROAKI SASAKI</div>\n        <div className='first-view-portfolio'>PORTFOLIO</div>\n      </div>\n        <Chats chats={chats} />\n        <AnswersList answers={answers} select={selectAnswer} />\n      </div>\n    </section>\n  );\n}\n\nexport default Home;\n",{"ruleId":"70","replacedBy":"71"},{"ruleId":"72","replacedBy":"73"},{"ruleId":"74","severity":1,"message":"75","line":1,"column":17,"nodeType":"76","messageId":"77","endLine":1,"endColumn":25},{"ruleId":"74","severity":1,"message":"78","line":1,"column":27,"nodeType":"76","messageId":"77","endLine":1,"endColumn":36},{"ruleId":"74","severity":1,"message":"79","line":3,"column":8,"nodeType":"76","messageId":"77","endLine":3,"endColumn":22},{"ruleId":"74","severity":1,"message":"80","line":8,"column":8,"nodeType":"76","messageId":"77","endLine":8,"endColumn":19},{"ruleId":"74","severity":1,"message":"78","line":1,"column":17,"nodeType":"76","messageId":"77","endLine":1,"endColumn":26},{"ruleId":"81","severity":1,"message":"82","line":22,"column":15,"nodeType":"83","endLine":22,"endColumn":44},{"ruleId":"81","severity":1,"message":"82","line":27,"column":15,"nodeType":"83","endLine":27,"endColumn":37},{"ruleId":"81","severity":1,"message":"82","line":37,"column":15,"nodeType":"83","endLine":37,"endColumn":45},{"ruleId":"81","severity":1,"message":"82","line":42,"column":15,"nodeType":"83","endLine":42,"endColumn":38},{"ruleId":"81","severity":1,"message":"82","line":51,"column":13,"nodeType":"83","endLine":51,"endColumn":42},{"ruleId":"81","severity":1,"message":"82","line":56,"column":13,"nodeType":"83","endLine":56,"endColumn":35},{"ruleId":"81","severity":1,"message":"82","line":64,"column":13,"nodeType":"83","endLine":64,"endColumn":45},{"ruleId":"81","severity":1,"message":"82","line":69,"column":13,"nodeType":"83","endLine":69,"endColumn":38},{"ruleId":"84","severity":1,"message":"85","line":55,"column":6,"nodeType":"86","endLine":55,"endColumn":8,"suggestions":"87"},{"ruleId":"81","severity":1,"message":"82","line":69,"column":9,"nodeType":"83","endLine":69,"endColumn":59},"no-native-reassign",["88"],"no-negated-in-lhs",["89"],"@typescript-eslint/no-unused-vars","'useState' is defined but never used.","Identifier","unusedVar","'useEffect' is defined but never used.","'defaultDataset' is defined but never used.","'ProfileIcon' is defined but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'currentId' and 'selectAnswer'. Either include them or remove the dependency array.","ArrayExpression",["90"],"no-global-assign","no-unsafe-negation",{"desc":"91","fix":"92"},"Update the dependencies array to be: [currentId, selectAnswer]",{"range":"93","text":"94"},[1638,1640],"[currentId, selectAnswer]"]